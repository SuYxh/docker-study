# 用户指定 Nginx 运行时使用的系统用户
user  nginx;

# 设置 Nginx 能够启动的工作进程数量，auto 根据可用 CPU 核心数自动设置
worker_processes  auto;

# 配置错误日志的路径和日志级别
error_log  /var/log/nginx/error.log notice;

# 设置存储 Nginx 主进程 PID 的文件位置
pid        /var/run/nginx.pid;

# 事件块，用于配置针对 worker 进程的连接处理
events {
    worker_connections  1024;  # 每个 worker 进程允许的最大连接数
}

# HTTP 块，用于配置 HTTP 服务器的相关设置
http {
    include       /etc/nginx/mime.types;  # 引入 MIME 类型的配置
    default_type  application/octet-stream;  # 默认 MIME 类型

    # 日志格式定义
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # 访问日志的路径和使用的日志格式
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;  # 开启高效文件传输模式
    #tcp_nopush     on;  # 注释掉的 tcp_nopush 指令可以控制数据包发送的策略

    keepalive_timeout  65;  # 长连接的超时时间（单位：秒）

    gzip  on;  # 开启 gzip 压缩

    # 服务器块，定义一个服务
    server {
        listen       8080;  # 监听的端口
        server_name  localhost;  # 服务器名称

        # 重定向所有 HTTP 请求到 HTTPS
        # location / {
        #     return 301 https://$host$request_uri;
        # }

        # location 块，定义对特定请求的处理
        location / {
            root   /usr/share/nginx/html;  # 根目录
            index  index.html;  # 默认文件
            try_files $uri $uri/ /index.html;  # 尝试提供请求的文件或目录，不存在则返回 index.html
        }

        # 配置错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;  # 错误页面的根目录
        }
    }

    # HTTPS server configuration
    # server {
    #     listen       443 ssl;  # 更改监听端口为 443，并启用 ssl
    #     server_name  localhost;

    #     ssl_certificate      /path/to/your/certificate.pem;  # 证书文件路径
    #     ssl_certificate_key  /path/to/your/private.key;  # 私钥文件路径

    #     ssl_session_cache    shared:SSL:1m;
    #     ssl_session_timeout  5m;

    #     ssl_ciphers  HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers  on;

    #     location / {
    #         root   /usr/share/nginx/html;
    #         index  index.html;
    #         try_files $uri $uri/ /index.html;
    #     }

    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   /usr/share/nginx/html;
    #     }
    # }
}
